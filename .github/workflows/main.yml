name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        distribution: 'oracle'
        java-version: '23'

    - name: Build with Maven
      run: mvn clean install

    - name: Run Tests
      run: mvn test

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=booking-ms \
          -Dsonar.host.url=http://54.211.124.206:9000 \
          -Dsonar.login=$SONAR_TOKEN

    - name: Build Docker Image
      run: docker build -t chandan669/booking-ms:${{ github.sha }} .

    - name: Log in to DockerHub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Push Docker Image to DockerHub
      run: docker push chandan669/booking-ms:${{ github.sha }}

    - name: AWS ECR Login
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-1'
      run: |
        aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
        aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
        aws configure set default.region "$AWS_REGION"
        aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin 084828560148.dkr.ecr.us-east-1.amazonaws.com

    - name: Push Docker Image to AWS ECR
      run: |
        docker tag chandan669/booking-ms:${{ github.sha }} 084828560148.dkr.ecr.us-east-1.amazonaws.com/booking-ms:${{ github.sha }}
        docker push 084828560148.dkr.ecr.us-east-1.amazonaws.com/booking-ms:${{ github.sha }}


    - name: Deploy to Kubernetes
      run: |
        echo "Deploying to Kubernetes cluster..."
