name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean install

    - name: Run Tests
      run: mvn test

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=your_project_key \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN

    - name: Build Docker Image
      run: docker build -t your-dockerhub-username/booking-ms:${{ github.sha }} .

    - name: Log in to DockerHub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Push Docker Image to DockerHub
      run: docker push your-dockerhub-username/booking-ms:${{ github.sha }}

    - name: AWS ECR Login
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'your-aws-region'
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set default.region $AWS_REGION
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin your-account-id.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Push Docker Image to AWS ECR
      run: |
        docker tag your-dockerhub-username/booking-ms:${{ github.sha }} your-account-id.dkr.ecr.your-aws-region.amazonaws.com/booking-ms:${{ github.sha }}
        docker push your-account-id.dkr.ecr.your-aws-region.amazonaws.com/booking-ms:${{ github.sha }}

    - name: Trivy Vulnerability Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'your-dockerhub-username/booking-ms:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'HIGH,CRITICAL'

    - name: Deploy to Kubernetes
      run: |
        # Placeholder for Kubernetes deployment commands
        echo "Deploying to Kubernetes cluster..."
